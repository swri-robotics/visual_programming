<?xml version="1.0"?>
<launch>

    <!-- The planning and execution components of MoveIt! configured to run -->
    <!-- using the ROS-Industrial interface. -->
    
    <!-- | 		PARAMETERS  		| -->
    <!-- the "sim" argument controls whether we connect to a Simulated or Real robot. -->
    <arg name="sim" default="true" doc="If true, the robot will be simulated in Gazebo" />
    <!-- hardware_interface to use : PositionJointInterface, EffortJointInterface, VelocityJointInterface. -->
    <arg name="hardware_interface" default="PositionJointInterface"/>
    <!-- The is gonna have its nodes/topics under a namespace with the same name. -->
    <arg name="robot_name" default="iiwa"/>
    <!-- Model of the iiwa to use : iiwa7, iiwa14 -->
    <arg name="model" default="iiwa7"/>     
    <arg name="moveit_debug" value="False"/>
    
    <param name="publishJointStates" value="True"/> <!--  required for iiwa  driver to publish joint values -->
    
    <!-- Working with the real robot.  -->
    <group ns="$(arg robot_name)"  unless="$(arg sim)">
	    
	    <arg name="controllers" value="joint_state_controller $(arg hardware_interface)_trajectory_controller" />
	    
	    <!-- Loads joint controller configurations from YAML file to parameter server -->
	    <rosparam file="$(find iiwa_control)/config/$(arg robot_name)_control.yaml" command="load" />
	    
	    <!-- Loads the controllers -->
	    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" 
	          output="screen" args="$(arg controllers) --shutdown-timeout 2" />
	    
	    <!-- Robot interface -->
	    <include file="$(find iiwa_hw)/launch/iiwa_hw.launch" >
	        <arg name="hardware_interface" value="$(arg hardware_interface)" />
	    </include>
        
    </group>    
    
    <!-- Given the published joint states, publish tf for the robot links -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />    
    
     <!-- We do not have a robot connected, so publish fake joint states -->
	  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
	    <param name="/use_gui" value="false"/>
	    <rosparam if="$(arg sim)" param="/source_list">[/move_group/fake_controller_joint_states]</rosparam>
	    <rosparam unless="$(arg sim)" param="/source_list">[/iiwa/joint_states]</rosparam>
	  </node>
	
    
    <!-- Load move_group -->        
   	<include file="$(find vpr_moveit_config)/launch/move_group.launch">
	    <arg name="allow_trajectory_execution" value="true"/>
	    <arg name="fake_execution" value="$(arg sim)"/>
	    <arg name="info" value="true"/>
	    <arg name="debug" value="$(arg moveit_debug)"/>
 		</include>
        

    
</launch>
